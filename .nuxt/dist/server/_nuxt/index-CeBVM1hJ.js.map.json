{"file":"index-CeBVM1hJ.js","mappings":";;;;;;;;;;;;;;;;;;AAEa,MAAA,kBAAkB,YAAY,gBAAgB;AAAA,EACzD,OAAO,OAAO;AAAA,IACZ,UAAU,CAAA;AAAA,EAAC;AAAA,EAEb,SAAS;AAAA,IACP,MAAM,gBAAgB;AAChB,UAAA;AACI,cAAA,MAAM,MAAM,MAAM,eAAe;AAClC,aAAA,WAAW,MAAM,IAAI,KAAK;AAAA,eACxB,OAAO;AACN,gBAAA,MAAM,4BAA4B,KAAK;AAAA,MAAA;AAAA,IAEnD;AAAA,IACA,WAAW,SAAS;AACb,WAAA,SAAS,KAAK,OAAO;AAAA,IAAA;AAAA,EAC5B;AAEJ,CAAC;ACnBsD,MAAe,aAAA,gBAAgB,iBAAiB;ACAhD,MAAe,aAAA,gBAAgB,kBAAkB;;;;;AC4ExG,UAAM,cAAcA,WAAG,IAAC,EAAE;AAC1B,UAAM,YAAYA,WAAG,IAAC,KAAK;AAC3B,UAAM,aAAaA,WAAG,IAAC,KAAK;AAY5B,UAAM,eAAe,CAAC,eAAe,MAAM,MAAM,MAAM,MAAM,IAAI;AACjE,UAAM,kBAAkBC,WAAQ,SAAC,MAAM,aAAa,MAAM,GAAG,CAAC,CAAC;AAC/D,UAAM,mBAAmBA,WAAAA,SAAS,MAAM,aAAa,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACvE7D,UAAM,aAAa,CAAC,SAAS;AAC3B,aAAO,IAAI,KAAK,IAAI,EAAE,eAAgB;AAAA,IACxC;;;;;;;;;;;;;;;;;ACTA,UAAM,eAAe,gBAAiB;;;;;;;;;;;;;;;;;;;;;;;;ACAjB,oBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["ref","computed"],"sources":["../../../../store/comments.ts","../../../../virtual:public?%2Fanime-girl.png","../../../../virtual:public?%2Fsubmit-icon.svg","../../../../components/CommentBox.vue","../../../../components/CommentItem.vue","../../../../components/CommentList.vue","../../../../components/CommentSystem.vue"],"sourcesContent":["import { defineStore } from 'pinia';\n\nexport const useCommentStore = defineStore('commentStore', {\n  state: () => ({\n    comments: []\n  }),\n  actions: {\n    async fetchComments() {\n      try {\n        const res = await fetch('/api/comments');\n        this.comments = await res.json();\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    },\n    addComment(comment) {\n      this.comments.push(comment);\n    }\n  }\n});","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/anime-girl.png\")","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/submit-icon.svg\")","<template>\n  <div class=\"comment-box-container\">\n    <!-- 输入区域 (包含二次元妹子) -->\n    <div \n      class=\"input-wrapper\"\n      :class=\"{ 'active-container': isFocused }\"\n      @click=\"focusInput\"\n    >\n      <textarea\n        v-model=\"commentText\"\n        class=\"comment-box\"\n        placeholder=\"Add a comment...\"\n        rows=\"3\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      ></textarea>\n      \n      <!-- 内嵌二次元妹子 -->\n      <img src=\"/anime-girl.png\" class=\"anime-girl\" />\n\n      <!-- 底部动画横线 -->\n      <div class=\"underline-container\">\n        <div \n          class=\"underline\" \n          :class=\"{ 'active-underline': isFocused }\"\n        ></div>\n      </div>\n    </div>\n\n    <!-- 操作按钮组 -->\n    <div class=\"action-buttons\">\n      <!-- 第一行按钮 -->\n      <div class=\"quick-reply-group\">\n        <button\n          v-for=\"(btn, index) in firstRowActions\"\n          :key=\"index\"\n          class=\"quick-action-btn\"\n          @click=\"handleQuickAction(btn)\"\n        >\n          {{ btn }}\n          <div class=\"mask-effect\"></div>\n        </button>\n      </div>\n      \n      <!-- 第二行按钮 -->\n      <div class=\"quick-reply-group\">\n        <button\n          v-for=\"(btn, index) in secondRowActions\"\n          :key=\"index\"\n          class=\"quick-action-btn\"\n          @click=\"handleQuickAction(btn)\"\n        >\n          {{ btn }}\n          <div class=\"mask-effect\"></div>\n        </button>\n      </div>\n\n      <!-- 提交按钮 -->\n      <button \n        class=\"submit-btn\"\n        @click=\"submitComment\"\n        @mousedown=\"startRipple\"\n        @mouseup=\"endRipple\"\n      >\n        <img src=\"/submit-icon.svg\" class=\"submit-icon\" />\n        SUBMIT\n        <div class=\"ripple-effect\" :class=\"{ active: isRippling }\"></div>\n        <div class=\"mask-effect\"></div>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from \"vue\";\n\nconst commentText = ref(\"\");\nconst isFocused = ref(false);\nconst isRippling = ref(false);\n\n// 颜文字映射表\nconst emoticonMap = {\n  '感谢': '(´• ω •`)ﾉ',\n  '支持': '٩(◕‿◕｡)۶',\n  '疑问': '(•ิ_•ิ)?',\n  '卖萌': '(≧◡≦) ♡',\n  '关心': '(っ´ω`)ﾉ(╥ω╥)'\n};\n\n// 按钮分组\nconst quickActions = [\"Quick Reply\", \"感谢\", \"支持\", \"疑问\", \"卖萌\", \"关心\"];\nconst firstRowActions = computed(() => quickActions.slice(0, 3));\nconst secondRowActions = computed(() => quickActions.slice(3));\n\n// 处理快速操作\nconst handleQuickAction = (btnText) => {\n  if (btnText === 'Quick Reply') return;\n  const emoticon = emoticonMap[btnText];\n  if (emoticon) {\n    commentText.value += emoticon + ' ';\n  }\n};\n\n// 涟漪动画控制\nconst startRipple = () => {\n  isRippling.value = true;\n  setTimeout(() => isRippling.value = false, 600);\n};\n</script>\n\n<style scoped>\n/* 输入容器 */\n.input-wrapper {\n  position: relative;\n  margin-bottom: 16px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 4px;\n  transition: background 0.3s;\n  padding-right: 70px; /* 给妹子图留出空间 */\n}\n\n/* 内嵌二次元妹子 */\n.anime-girl {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  width: 60px;\n  height: auto;\n  z-index: 1;\n  pointer-events: none;\n  opacity: 0.9;\n  mix-blend-mode: screen; /* 更好的融合效果 */\n}\n\n/* 文本输入框 */\n.comment-box {\n  width: 100%;\n  min-height: 100px; /* 增大输入框高度 */\n  padding: 12px 60px 12px 12px; /* 右侧留出妹子图空间 */\n  background: transparent;\n  border: none;\n  color: #fff;\n  font-size: 14px;\n  line-height: 1.5;\n  outline: none;\n  resize: vertical;\n}\n\n/* 修复底部横线动画 */\n.underline-container {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  overflow: hidden; /* 防止动画溢出 */\n}\n\n.underline {\n  width: 0;\n  height: 100%;\n  background: #00BCD4;\n  transition: width 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.underline.active-underline {\n  width: 100%;\n}\n\n/* 修复按钮点击效果 */\n.quick-action-btn:active .mask-effect,\n.submit-btn:active .mask-effect {\n  opacity: 0.2;\n  transition: opacity 0.1s;\n}\n\n/* 新增涟漪动画激活状态 */\n.ripple-effect.active {\n  animation: ripple 0.6s;\n}\n\n@keyframes ripple {\n  from {\n    transform: scale(0);\n    opacity: 0.4;\n  }\n  to {\n    transform: scale(2);\n    opacity: 0;\n  }\n}\n</style>","<template>\n  <div class=\"comment-item\">\n    <div class=\"comment-header\">\n      <img :src=\"comment.avatar\" class=\"avatar\" />\n      <div class=\"comment-info\">\n        <span class=\"username\">{{ comment.username }}</span>\n        <span class=\"timestamp\">{{ formatDate(comment.date) }}</span>\n      </div>\n    </div>\n    <p class=\"comment-text\">{{ comment.text }}</p>\n    <div class=\"comment-actions\">\n      <button class=\"action-btn\">👍 0</button>\n      <button class=\"action-btn\">👎 0</button>\n      <button class=\"reply-btn\">ADD COMMENT</button>\n    </div>\n  </div>\n</template>\n\n<script setup>\ndefineProps([\"comment\"]);\n\nconst formatDate = (date) => {\n  return new Date(date).toLocaleString();\n};\n</script>\n\n<style scoped>\n.comment-item {\n  background: #222;\n  padding: 10px;\n  border-radius: 6px;\n  margin-top: 10px;\n}\n\n.comment-header {\n  display: flex;\n  align-items: center;\n}\n\n.avatar {\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n}\n\n.comment-info {\n  margin-left: 10px;\n  color: #aaa;\n}\n\n.username {\n  font-weight: bold;\n  color: #fff;\n}\n\n.timestamp {\n  font-size: 12px;\n}\n\n.comment-text {\n  margin: 8px 0;\n  color: #ccc;\n}\n\n.comment-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.action-btn,\n.reply-btn {\n  border: 1px solid #00aaff;\n  background: transparent;\n  color: #00aaff;\n  padding: 6px 12px;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.reply-btn {\n  background: #00aaff;\n  color: #fff;\n}\n</style>","<template>\n  <div class=\"comment-list\">\n    <CommentItem\n      v-for=\"comment in commentStore.comments\"\n      :key=\"comment.id\"\n      :comment=\"comment\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { useCommentStore } from '@/store/comments';\nimport CommentItem from './CommentItem.vue';\n\nconst commentStore = useCommentStore();\n</script>\n\n<style scoped>\n.comment-list {\n  margin-top: 20px;\n}\n</style>\n","<template>\n  <div class=\"comment-system\">\n    <h2>💬 评论区</h2>\n    <CommentBox />\n    <CommentList />\n  </div>\n</template>\n\n<script setup>\nimport { onMounted } from 'vue';\nimport { useCommentStore } from '@/store/comments';\nimport CommentBox from './CommentBox.vue';\nimport CommentList from './CommentList.vue';\n\nconst commentStore = useCommentStore();\n\nonMounted(() => {\n  commentStore.fetchComments();\n});\n</script>\n\n<style scoped>\n.comment-system {\n  max-width: 600px;\n  margin: 0 auto;\n  background: #222;\n  padding: 20px;\n  border-radius: 10px;\n}\nh2 {\n  text-align: center;\n  color: white;\n}\n</style>\n"],"version":3}