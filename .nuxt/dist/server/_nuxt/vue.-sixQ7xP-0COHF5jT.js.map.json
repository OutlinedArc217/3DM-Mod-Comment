{"file":"vue.-sixQ7xP-0COHF5jT.js","mappings":";AAGA,SAAS,QAAQ,OAAO,UAAU,IAAI;AACpC,QAAM,OAAO,QAAQ,QAAQ,WAAY;AACzC,MAAI,MAAM;AACR,QAAI,CAAC,KAAK;AACR,aAAO,cAAc,MAAM,OAAO,OAAO;AAC3C,WAAO,KAAK,KAAK,OAAO,OAAO;AAAA,EACnC;AACA;AACA,SAAS,cAAc,MAAM,OAAO,UAAU,CAAA,GAAI;AAChD,QAAM,cAAcA,WAAG,IAAC,KAAK;AAC7B,QAAM,gBAAgBA,WAAG,IAAC,EAAE;AAC5BC,aAAAA,YAAY,MAAM;AAChB,kBAAc,QAAQ,YAAY,QAAQ,CAAE,IAAG,sBAAsB,KAAK;AAAA,EAC9E,CAAG;AACD,QAAM,QAAQ,KAAK,KAAK,cAAc,OAAO,OAAO;AACpDC,mBAAM,eAAe,CAAC,MAAM;AAC1B,UAAM,MAAM,CAAC;AAAA,EACjB,CAAG;AACUC,aAAkB,mBAAA;AAY7B,SAAO;AACT;","names":["ref","watchEffect","watch","getCurrentInstance"],"sources":["../../../../node_modules/.pnpm/@unhead+vue@1.11.18_vue@3.5.13_typescript@5.7.3_/node_modules/@unhead/vue/dist/shared/vue.-sixQ7xP.mjs"],"sourcesContent":["import { ref, watchEffect, watch, getCurrentInstance, onBeforeUnmount, onDeactivated, onActivated } from 'vue';\nimport { i as injectHead, r as resolveUnrefHeadInput } from './vue.ziyDaVMR.mjs';\n\nfunction useHead(input, options = {}) {\n  const head = options.head || injectHead();\n  if (head) {\n    if (!head.ssr)\n      return clientUseHead(head, input, options);\n    return head.push(input, options);\n  }\n}\nfunction clientUseHead(head, input, options = {}) {\n  const deactivated = ref(false);\n  const resolvedInput = ref({});\n  watchEffect(() => {\n    resolvedInput.value = deactivated.value ? {} : resolveUnrefHeadInput(input);\n  });\n  const entry = head.push(resolvedInput.value, options);\n  watch(resolvedInput, (e) => {\n    entry.patch(e);\n  });\n  const vm = getCurrentInstance();\n  if (vm) {\n    onBeforeUnmount(() => {\n      entry.dispose();\n    });\n    onDeactivated(() => {\n      deactivated.value = true;\n    });\n    onActivated(() => {\n      deactivated.value = false;\n    });\n  }\n  return entry;\n}\n\nexport { useHead as u };\n"],"version":3}